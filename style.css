:root {
  --my-green: #04aa6d;
}

* {
  margin: 0;
  padding: 0;
  font-family: Arial, Helvetica, sans-serif;
}

.box {
  width: 100vw;
  height: 100vh;
  display: grid;
  grid-template: 1fr 5fr / 1fr;
  grid-template-areas:
    "header"
    "library";
}

.header {
  grid-area: header;
  display: flex;
  align-items: center;
  justify-content: center;
}

.add-btn {
  width: clamp(160px, 15%, 500px);
  height: clamp(50px, 15%, 500px);
  border: none;
  background-color: var(--my-green);
  color: white;
  font-size: 150%;
  font-weight: 800;
  border-radius: 15px;
  margin: 10px;
  transition: .1s;
}

.add-btn:hover {
  scale: 1.1;
}

/* LIBRARY & TABLE STYLE */

.library {
  grid-area: library;
  padding: 20px 15% 20px 15%;
}

.lib-table {
  font-family: Arial, Helvetica, sans-serif;
  border-collapse: collapse;
  width: 100%;
border-style: none;
}

.lib-table td,
.lib-table th {
  border: 1px solid #ddd;
  padding: 8px;
}

.lib-table tr:nth-child(even) {
  background-color: #f2f2f2;
}

.lib-table tr:hover {
  background-color: #ddd;
}

.lib-table th {
  padding-top: 12px;
  padding-bottom: 12px;
  text-align: left;
  background-color: var(--my-green);
  color: white;
}

.pages-cell {
  text-align: center;
}

.read-cell {
  text-align: center;
}

td.delete-cell {
  text-align: center;
  padding: 0;
}

.delete-img {
  max-width: 100%;
  min-width: 100%;
  border: none;
}

.delete-btn {
  max-width: 30%;
  border: none;
  background: transparent;
}

/* FORM STLYE */
/* This form-overlay transition code documented below it*/
.form-overlay {
  position: absolute;
  /* display: none; */
  /* height: 100vh; */
  width: 100vw;
  justify-content: center;
  align-items: center;
  background-color: rgba(0, 0, 0, 0.329);

 /* Hide the element content, while height = 0 */
    overflow: hidden;
    height: 0vh; /* start hiegh @ 0 */
    opacity: 0; /* start opacity @ 0 */
    transition: height 0ms 400ms, opacity 400ms 0ms;
  /* height delays to the time it takes opacity to fade */ 
}

.form-overlay-vis {
    height: 100vh; /* bring height to 100vh */
    opacity: 1; /* set opacity to 0 (full) */
    transition: height 0ms 0ms, opacity 275ms 0ms; 
  /* height change simmediately, opacity fades in */
}

/* 
https://stackoverflow.com/questions/3331353/transitions-on-the-css-display-property
So, what's going on here?

When form-overlay-vis class is added, both height and opacity 
start animation without delay (0 ms), though height 
takes 0 ms to complete animation 
(equivalent of display: block) and opacity takes 600 ms.

When form-overlay-vis class is removed, opacity starts 
animation (0 ms delay, 400 ms duration), and height waits 
400 ms and only then instantly (0 ms) restores initial value 
(equivalent of display: none in the animation callback).
*/

.form-card {
  position: absolute;
  border: 5px solid #ffff;
  background-color: var(--my-green);
  border-radius: 15px;
  box-shadow: 25px 20px 70px -30px black;
      transition: 1s;
}

.side-form {
  grid-area: sideform;
  margin: 30px;
      transition: 1s;
}

input {
  padding: 5px;
  margin: 0 0 0 0;
  border: white;
  border-radius: 5px;
}

label {
  color: white;
  font-size: 110%;
  margin-bottom: 5px;
  font-weight: bolder
}

.read-opt1 > label,
.read-opt2 > label {
  font-weight: 100;
}

.infield-r {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
}

.read-opt {
  display: flex;
  width: 100%;
}

.read-opt1{
  display: flex;
  margin-right: 20%;
  gap: 5px;
  justify-content: center;
}

.read-opt2{
  display: flex;
  gap: 5px;
}

/* * THIS CODE COMES FROM https://moderncss.dev/pure-css-custom-styled-radio-buttons/ */
input[type=radio] {
  box-sizing: border-box;
  appearance: none;
  font: inherit;
  color: white;
  background-color: white;
  width: 1.15em;
  height: 1.15em;
  border: 0.15em solid currentColor;
  border-radius: 50%;
  display: grid;
  place-content: center;
}

input[type="radio"]::before {
  content: "";
  width: 0.65em;
  height: 0.65em;
  border-radius: 50%;
  transform: scale(0);
  transition: 120ms transform ease-in-out;
  box-shadow: inset 1em 1em var(--my-green);
}

input[type="radio"]:checked::before {
  transform: scale(1);
}
/**/

.infield {
  display: flex;
  flex-direction: column;
  margin: 10px 0 10px 0;
}

input#submit {
  font-weight: 800;
  font-size: 100%;
  border-radius: 15px;
  color: var(--my-green);
  background-color: white;
  width: 100%;
  margin-top: 10%;
  padding: 5%;
}
